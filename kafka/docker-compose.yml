version: "2"

volumes:
  kafka_data:
    driver: local

networks:
  kafka_net:
    driver: bridge
  traccar-net:
    driver: bridge

services:
  kafka:
    image: docker.io/bitnami/kafka:3.4.0-debian-11-r23
    hostname: broker
    container_name: broker
    networks:
      - kafka_net
    ports:
      - "9094:9094"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - BITNAMI_DEBUG=yes
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_KRAFT_CLUSTER_ID=9YoavaRpTCOitT3Dm2OQFQ
      # For more details see See https://rmoff.net/2018/08/02/kafka-listeners-explained/
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.0
    networks:
      - kafka_net
    ports:
      - "8088:8080"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_CLUSTERS_0_NAME: broker
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
